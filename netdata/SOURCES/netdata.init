#!/bin/bash

# netdata        Startup script for netdata

# chkconfig: - 85 15
# processname: netdata
# config: /etc/netdata/netdata.conf
# config: /etc/sysconfig/netdata
# pidfile: /var/run/netdata.pid
# description: netdata is very secure monitoring daemon

### BEGIN INIT INFO
# Provides: netdata
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop netdata
### END INIT INFO

###############################################################################

source /etc/init.d/kaosv

###############################################################################

kv[prog_name]="netdata"

kv.readSysconfig

binary=${BINARY:-/usr/sbin/netdata}
conf_file=${CONF_FILE:-/etc/netdata/netdata.conf}

kv[search_pattern]="${kv[prog_name]} -c $conf_file"

###############################################################################

kv.addCommand "start"         "Start ${kv[prog_name]} monitoring daemon"
kv.addCommand "stop"          "Stop ${kv[prog_name]} monitoring daemon"
kv.addCommand "restart"       "Restart (stop+start) ${kv[prog_name]} monitoring daemon"
kv.addCommand "status"        "Show current status of ${kv[prog_name]}"

kv.addHandler "start"   "startServiceHandler"
kv.addHandler "stop"    "stopServiceHandler"

###############################################################################

startServiceHandler() {

  kv.daemonize "$binary" "-c $conf_file -nd $OPTIONS"

  if kv.getStartStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

stopServiceHandler() {

  kv.sendSignal "SIGTERM"

  if kv.getStopStatus ; then
    return $ACTION_OK
  fi

  return $ACTION_ERROR
}

###############################################################################

kv.go "$@"
