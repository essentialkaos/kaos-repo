# Bibop recipe for Zabbix
# See more: https://kaos.sh/bibop

pkg zabbix-agent zabbix-server-pgsql zabbix-proxy-pgsql zabbix-java-gateway

require-root yes

var service_user   zabbix
var service_group  zabbix

var agent_service  zabbix-agent
var server_service zabbix-server
var proxy_service zabbix-proxy
var java_gateway_service zabbix-java-gateway

var service_user zabbix

var config_dir    /etc/zabbix
var log_dir       /var/log/zabbix
var logrotate_dir /etc/logrotate.d
var tmpconf_dir   /usr/lib/tmpfiles.d

var delay 3

command "-" "Check agent environment"
  app zabbix_agentd

  service-present {agent_service}

  user-exist  {service_user}
  group-exist {service_user}

  dir {config_dir}/zabbix_agentd.d
  mode {config_dir}/zabbix_agentd.d 755

  exist {config_dir}/zabbix_agentd.conf
  mode {config_dir}/zabbix_agentd.conf 644

  dir {config_dir}/alertscripts
  dir {config_dir}/externalscripts

  exist {tmpconf_dir}/{agent_service}.conf
  mode {tmpconf_dir}/{agent_service}.conf 644

  exist {logrotate_dir}/{agent_service}
  mode {logrotate_dir}/{agent_service} 644

  dir {log_dir}
  mode {log_dir} 755
  owner {log_dir} {service_user}:{service_group}

command "-" "Check java gateway environment"
  app zabbix_java_gateway

  service-present {java_gateway_service}

  user-exist  {service_user}
  group-exist {service_user}

  exist {config_dir}/zabbix_java_gateway.conf
  mode {config_dir}/zabbix_java_gateway.conf 644

  exist {config_dir}/zabbix_java_gateway_logback.xml
  mode {config_dir}/zabbix_java_gateway_logback.xml 644

  exist {tmpconf_dir}/{java_gateway_service}.conf
  mode {tmpconf_dir}/{java_gateway_service}.conf 644

  exist {logrotate_dir}/{java_gateway_service}
  mode {logrotate_dir}/{java_gateway_service} 644

  dir {log_dir}
  mode {log_dir} 755
  owner {log_dir} {service_user}:{service_group}

command "-" "Check server environment"
  app zabbix_server_pgsql

  service-present {server_service}

  user-exist  {service_user}
  group-exist {service_user}

  exist {config_dir}/zabbix_server.conf
  mode {config_dir}/zabbix_server.conf 640

  exist {tmpconf_dir}/{server_service}.conf
  mode {tmpconf_dir}/{server_service}.conf 644

  exist {logrotate_dir}/{server_service}
  mode {logrotate_dir}/{server_service} 644

  dir {log_dir}
  mode {log_dir} 755
  owner {log_dir} {service_user}:{service_group}

command "systemctl start {server_service}" "Start Zabbix Server daemon"
  wait {delay}
  service-works {server_service}

command "systemctl start {java_gateway_service}" "Start Zabbix Java Gateway"
  wait {delay}
  service-works {java_gateway_service}

command "systemctl start {agent_service}" "Start Zabbix Agent daemon"
  wait {delay}
  service-works {agent_service}

command "systemctl status {java_gateway_service}" "Check status of Zabbix Java Gateway"
  expect "active (running)"

command "systemctl status {agent_service}" "Check status of Zabbix Agent daemon"
  expect "active (running)"

command "systemctl status {server_service}" "Check status of Zabbix Server daemon"
  expect "active (running)"

command "systemctl stop {java_gateway_service}" "Stop Zabbix Java Gateway"
  wait {delay}
  !service-works {java_gateway_service}

command "systemctl stop {agent_service}" "Stop Zabbix Agent daemon"
  wait {delay}
  !service-works {agent_service}

command "systemctl stop {server_service}" "Stop Zabbix Server daemon"
  wait {delay}
  !service-works {server_service}

command "-" "Check proxy environment"
  app zabbix_proxy_pgsql

  service-present {proxy_service}

  user-exist  {service_user}
  group-exist {service_user}

  exist {config_dir}/zabbix_proxy.conf
  mode {config_dir}/zabbix_proxy.conf 640

  exist {tmpconf_dir}/{proxy_service}.conf
  mode {tmpconf_dir}/{proxy_service}.conf 644

  exist {logrotate_dir}/{proxy_service}
  mode {logrotate_dir}/{proxy_service} 644

  dir {log_dir}
  mode {log_dir} 755
  owner {log_dir} {service_user}:{service_group}

command "systemctl start {proxy_service}" "Start Zabbix Proxy daemon"
  wait {delay}
  service-works {proxy_service}

command "systemctl status {proxy_service}" "Check status of Zabbix Proxy daemon"
  expect "active (running)"

command "systemctl stop {proxy_service}" "Stop Zabbix Proxy daemon"
  wait {delay}
  !service-works {proxy_service}
