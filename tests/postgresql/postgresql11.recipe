# Bibop recipe for PostgreSQL 11
# See more: https://kaos.sh/bibop

pkg postgresql11-contrib postgresql11-devel postgresql11-docs postgresql11-libs postgresql11-llvmjit postgresql11-plperl postgresql11-plpython3 postgresql11-pltcl postgresql11-server postgresql11-test

require-root yes
unsafe-actions yes

var version       11
var service_name  postgresql-{version}
var service_user  postgres
var service_group postgres
var install_dir   /usr/pgsql-{version}
var lib_dir       {install_dir}/lib
var state_dir     /var/lib/pgsql
var data_dir      {state_dir}/{version}
var pid_file      /var/run/postgresql{version}.pid

var python3_lib   libpython{PYTHON3_VERSION}m.so.*

var delay 5

## ENVIRONMENT #################################################################

command "-" "Check environment"
  app psql
  app pg_dump
  app pg_config

  service-present {service_name}

  user-exist {service_user}
  user-id {service_user} 26
  group-exist {service_group}

  exist /etc/sysconfig/{service_name}
  mode /etc/sysconfig/{service_name} 644
  exist /etc/init.d/{service_name}
  mode /etc/init.d/{service_name} 755

command "-" "Check configuration files for external systems"
  exist /etc/pam.d/postgresql{version}
  mode /etc/pam.d/postgresql{version} 644

  exist /usr/lib/tmpfiles.d/postgresql-{version}.conf
  mode /usr/lib/tmpfiles.d/postgresql-{version}.conf 644

command "-" "Check data directory"
  exist {data_dir}/backups
  exist {data_dir}/data
  owner {data_dir}/data {service_user}
  mode {data_dir}/data 700

command "-" "Check binaries"
  exist {install_dir}/bin/createdb
  exist {install_dir}/bin/createuser
  exist {install_dir}/bin/dropdb
  exist {install_dir}/bin/dropuser
  exist {install_dir}/bin/initdb
  exist {install_dir}/bin/pg_config
  exist {install_dir}/bin/pg_ctl
  exist {install_dir}/bin/pg_dump
  exist {install_dir}/bin/pg_dumpall
  exist {install_dir}/bin/pg_restore
  exist {install_dir}/bin/postgres
  exist {install_dir}/bin/psql

  mode {install_dir}/bin/createdb 755
  mode {install_dir}/bin/createuser 755
  mode {install_dir}/bin/dropdb 755
  mode {install_dir}/bin/dropuser 755
  mode {install_dir}/bin/initdb 755
  mode {install_dir}/bin/pg_config 755
  mode {install_dir}/bin/pg_ctl 755
  mode {install_dir}/bin/pg_dump 755
  mode {install_dir}/bin/pg_dumpall 755
  mode {install_dir}/bin/pg_restore 755
  mode {install_dir}/bin/postgres 755
  mode {install_dir}/bin/psql 755

command "-" "Check bash_profile"
  exist {install_dir}/share/bash_profile
  mode {install_dir}/share/bash_profile 700
  owner {install_dir}/share/bash_profile {service_user}:{service_group}

  link {state_dir}/.bash_profile {install_dir}/share/bash_profile

command "-" "Check development environment"
  exist {install_dir}/include/libpq-fe.h
  exist {install_dir}/include/pgtypes.h

  lib-loaded libecpg.so.*
  lib-loaded libecpg_compat.so.*
  lib-loaded libpgtypes.so.*
  lib-loaded libpq.so.*
  lib-loaded libpqwalreceiver.so

  lib-config libecpg_compat
  lib-config libecpg
  lib-config libpgtypes
  lib-config libpq

command "-" "Check symlinks linker and pkgconfig configs"
  exist /etc/ld.so.conf.d/postgresql-pgdg-libs.conf
  exist {LIBDIR}/pkgconfig/libecpg_compat.pc
  exist {LIBDIR}/pkgconfig/libecpg.pc
  exist {LIBDIR}/pkgconfig/libpgtypes.pc
  exist {LIBDIR}/pkgconfig/libpq.pc

  link /etc/ld.so.conf.d/postgresql-pgdg-libs.conf {install_dir}/share/postgresql-{version}-libs.conf
  link {LIBDIR}/pkgconfig/libecpg_compat.pc {install_dir}/lib/pkgconfig/libecpg_compat.pc
  link {LIBDIR}/pkgconfig/libecpg.pc {install_dir}/lib/pkgconfig/libecpg.pc
  link {LIBDIR}/pkgconfig/libpgtypes.pc {install_dir}/lib/pkgconfig/libpgtypes.pc
  link {LIBDIR}/pkgconfig/libpq.pc {install_dir}/lib/pkgconfig/libpq.pc

command "-" "Check LLVM Bitcode"
  exist {lib_dir}/bitcode
  exist {lib_dir}/llvmjit.so

  dir {lib_dir}/bitcode
  !empty-dir {lib_dir}/bitcode

command "-" "Check PL/Python3U"
  exist {lib_dir}/hstore_plpython3.so
  exist {lib_dir}/jsonb_plpython3.so
  exist {lib_dir}/ltree_plpython3.so
  exist {lib_dir}/plpython3.so

  lib-linked {lib_dir}/hstore_plpython3.so {python3_lib}
  lib-linked {lib_dir}/jsonb_plpython3.so {python3_lib}
  lib-linked {lib_dir}/ltree_plpython3.so {python3_lib}
  lib-linked {lib_dir}/plpython3.so {python3_lib}

command "-" "Check PL/PerlU"
  exist {lib_dir}/hstore_plperl.so
  exist {lib_dir}/plperl.so

  lib-linked {lib_dir}/hstore_plperl.so libperl.so.*
  lib-linked {lib_dir}/plperl.so libperl.so.*

command "-" "Check PL/PerlU"
  exist {lib_dir}/pltcl.so

  lib-linked {lib_dir}/pltcl.so libtcl8.*

## SERVER ######################################################################

command "service {service_name} initdb" "Database initialization"
  exit 0
  exist {data_dir}/data/PG_VERSION
  exist {data_dir}/data/pg_hba.conf
  exist {data_dir}/data/pg_ident.conf
  exist {data_dir}/data/postgresql.conf
  exist {data_dir}/data/pg_wal
  mode {data_dir}/data/pg_hba.conf 600
  mode {data_dir}/data/pg_ident.conf 600
  mode {data_dir}/data/postgresql.conf 600
  mode {data_dir}/data/pg_wal 700
  !empty {data_dir}/data/pg_hba.conf
  !empty {data_dir}/data/pg_ident.conf
  !empty {data_dir}/data/postgresql.conf
  owner {data_dir}/data/pg_hba.conf {service_user}
  owner {data_dir}/data/pg_ident.conf {service_user}
  owner {data_dir}/data/postgresql.conf {service_user}

command "systemctl start {service_name}" "Start PostgreSQL server"
  wait {delay}
  service-works {service_name}
  connect tcp :5432
  checksum-read {pid_file} pid_sha

command "systemctl status {service_name}" "Check status of PostgreSQL server"
  expect "active (running)"

command "{service_user}:{install_dir}/bin/psql -t -c 'select version();'" "Check PostgreSQL version"
  exit 0
  output-contains "PostgreSQL {version}"

command "systemctl restart {service_name}" "Restart PostgreSQL server"
  wait {delay}
  service-works {service_name}
  connect tcp :5432
  !checksum {pid_file} {pid_sha}

command "systemctl stop {service_name}" "Stop PostgreSQL server"
  wait {delay}
  !service-works {service_name}
  !connect tcp :5432

command:teardown "-" "Data cleanup"
  cleanup {data_dir}/data
  cleanup {data_dir}/backups
